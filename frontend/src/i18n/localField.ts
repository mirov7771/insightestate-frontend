import { LOCALES } from '@/i18n/locales';
import { messages } from '@/i18n/messages';

type fields =
  | 'city'
  | 'airport_time'
  | 'beach_time'
  | 'region'
  | 'type_of_place'
  | 'completion_date'
  | 'number_of_bedrooms'
  | 'price'
  | 'potential'
  | 'uk'
  | 'language'
  | 'properties'
  | 'selections'
  | 'profile'
  | 'about_us'
  | 'contacts'
  | 'subscribe'
  | 'ask_question'
  | 'juridical_info'
  | 'politics'
  | 'footer_info'
  | 'rights_reserved'
  | 'not_found'
  | 'projects'
  | 'filter_params'
  | 'filter_clear'
  | 'price_from'
  | 'min'
  | 'object_delete_title'
  | 'object_delete_message'
  | 'object_info_title'
  | 'object_info_message'
  | 'ok'
  | 'selection'
  | 'add_to_collection'
  | 'help_with_client'
  | 'ai_collection'
  | 'description'
  | 'more_photos'
  | 'yes'
  | 'no'
  | 'developer'
  | 'parking'
  | 'class'
  | 'to_airport'
  | 'to_beach'
  | 'total_aparts'
  | 'total_floors'
  | 'not_selected'
  | 'our_rating'
  | 'overall'
  | 'security'
  | 'invest_potential'
  | 'project_location'
  | 'comfort'
  | 'info_title'
  | 'project_plan'
  | 'payment_schedule'
  | 'payment'
  | 'map'
  | 'infrastructure'
  | 'yield'
  | 'roi'
  | 'irr'
  | 'net'
  | 'layouts'
  | 'plan'
  | 'size_sqm'
  | 'price_range'
  | 'bedroom'
  | 'bedrooms'
  | 'bedrooms2'
  | 'villa'
  | 'kids'
  | 'gym'
  | 'co_working'
  | 'beach'
  | 'mall'
  | 'airport'
  | 'min_on_car'
  | 'security_p1'
  | 'security_p2'
  | 'security_p3'
  | 'invest_p1'
  | 'invest_p2'
  | 'invest_p3'
  | 'location_p1'
  | 'location_p2'
  | 'comfort_p1'
  | 'comfort_p2'
  | 'comfort_p3'
  | 'comfort_p4'
  | 'comfort_p5'
  | 'villa_type'
  | 'apartment_type'
  | 'from'
  | 'to'
  | 'min_30_car'
  | 'min_60_car'
  | 'min_60_plus_car'
  | 'invest_f1'
  | 'invest_f2'
  | 'invest_f3'
  | 'invest_f4'
  | 'walk_5'
  | 'walk_10'
  | 'walk_30'
  | 'car_5'
  | 'car_10'
  | 'car_30'
  | 'studio'
  | 'ai_title'
  | 'ai_header'
  | 'ai_body'
  | 'ai_label'
  | 'ai_button_1'
  | 'ai_button_2'
    ;

export const localField = (field: fields) => {
  const locale = localStorage.getItem('language');
  let ln = LOCALES.RUSSIAN;

  if (locale) {
    ln = locale === 'en' ? LOCALES.ENGLISH : LOCALES.RUSSIAN;
  }
  return messages[ln][field];
};
